@model IEnumerable<EmployeeViewModel>


@{
    ViewData["Title"] = "All Employees";

    string VDataMessage = ViewData["Message"] as string; // Enforce Type Safety -> Requires Casting [Strongly Typed]

    var VBagMessage = ViewBag.Message; // Can't Enforce Type Safety -> Not Requires Casting [Weekly Typed]
}


<h1>All Employees</h1>
<br />
<br />


<a asp-action="Create" class="btn btn-primary">Create New Employee</a>
<br />

<div class="mt-3 row justify-content-center align-items-center">
    <form asp-action="Index" class="row col-8 offset-1">
        <div class="col-8">
            <input class="form-control" id="searchtext" name="SearchValue" placeholder="Search By Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>

@if(Model.Count() > 0)
{
    <table class="mt-3 table table-striped table-hover">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(E => E.Name)</td>
                <td>@Html.DisplayNameFor(E => E.Age)</td>
                <td>@Html.DisplayNameFor(E => E.Address)</td>
                <td>@Html.DisplayNameFor(E => E.Image)</td>
                <td>@Html.DisplayNameFor(E => E.Department)</td>
                <td>@Html.DisplayNameFor(E => E.Salary)</td>
                <td>@Html.DisplayNameFor(E => E.IsActive)</td>
                <td>@Html.DisplayNameFor(E => E.Email)</td>
                <td>@Html.DisplayNameFor(E => E.PhoneNumber)</td>
                <td>@Html.DisplayNameFor(E => E.HireDate)</td>
                <td>Details</td>
                <td>Update</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Address</td>
                    <td>
                        <img src="~/files/images/@employee.ImageName" class="img-fluid rounded" alt="Employee Image" height="30" width="30" />
                    </td>
                    @*<td>@employee.Department?.Name</td>*@
                    <td>@Html.DisplayFor(M => employee.Department.Name)</td>
                    <td>@Html.DisplayFor(M => employee.Salary)</td>
                    @*<td>@employee.IsActive</td>*@
                    <td>@Html.DisplayFor(M => employee.IsActive)</td>
                    <td>@Html.DisplayFor(M => employee.Email)</td>
                    <td>@employee.PhoneNumber</td>
                    <td>@employee.HireDate</td>

                    <partial name="_ButtonsPartialView" model="@employee.Id.ToString()" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There is NO Employees!!</h3>
    </div>
}




<script>
    var searchBar = document.getElementById("searchtext");
    const tableRows = $('table tbody tr');
    searchBar.on('keypress', function(event)
    {
        const searchValue = searchBar.val.ToLowerCase();


        $.ajax({
            url: '/Employee/Index',
            type: 'Get',
            data: { Search: searchValue },
            success: function(result)
            {
                console.log(result);
            },
            error: function (xhr, status, error)
            {
                console.log(error);
            }
        });


        //tableRows.filter(function()
        //{
        //    const text = $(this).Text().ToLowerCase();
        //    const match = text.indexOf(searchValue) > -1;

        //    $(this).Toggle(match);
        //});
    };
</script>



